local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/8293733528373/63917387182828/refs/heads/main/7282728Q37262", true))()

local window = library:AddWindow("Sad v1.1 | Private", {
    main_color = Color3.fromRGB(207, 13, 13),
    min_size = Vector2.new(685, 800),
    can_resize = false,
})

local tabStats = window:AddTab("Stats")

tabStats:AddLabel("View Stats").TextSize = 30

local selectedPlayer = game.Players.LocalPlayer
local spectating = false
local currentConnection = nil
local spectateLoop = nil

local startTime = tick()
local initialKills = 0

local ULTIMATE_BOOST_PERCENT = 75
local PETS_BOOST_PER_PACK = 33.125
local PETS_MAX = 8

local function getInitialStats()
    local player = game.Players.LocalPlayer
    if player then
        local leaderstats = player:FindFirstChild("leaderstats")
        if leaderstats and leaderstats:FindFirstChild("Kills") then
            initialKills = leaderstats.Kills.Value
        end
    end
end

getInitialStats()

local function formatWithCommas(number)
    local formatted = tostring(math.floor(number))
    while true do
        formatted, count = formatted:gsub("^(-?%d+)(%d%d%d)", "%1,%2")
        if count == 0 then break end
    end
    return formatted
end

local function formatAbbreviated(number)
    if number >= 1e15 then
        return string.format("%.1fQa", number / 1e15)
    elseif number >= 1e12 then
        return string.format("%.1fT", number / 1e12)
    elseif number >= 1e9 then
        return string.format("%.1fB", number / 1e9)
    elseif number >= 1e6 then
        return string.format("%.1fM", number / 1e6)
    elseif number >= 1e3 then
        return string.format("%.1fK", number / 1e3)
    else
        return tostring(math.floor(number))
    end
end

local function formatBoth(number)
    return formatWithCommas(number) .. " (" .. formatAbbreviated(number) .. ")"
end

local playerDropdown = tabStats:AddDropdown("Select Player", function(selectedText)
    local playerName = selectedText:match("%| (.+)$") or selectedText
    selectedPlayer = game.Players:FindFirstChild(playerName)
    if selectedPlayer then
        updatePlayerStats()
    end
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    playerDropdown:Add(player.DisplayName .. " | " .. player.Name)
end

game.Players.PlayerAdded:Connect(function(player)
    playerDropdown:Add(player.DisplayName .. " | " .. player.Name)
end)

game.Players.PlayerRemoving:Connect(function(player)
    playerDropdown:Clear()
    for _, p in ipairs(game.Players:GetPlayers()) do
        playerDropdown:Add(p.DisplayName .. " | " .. p.Name)
    end
end)

local durabilityLabel = tabStats:AddLabel("Durability: 0 (0)")
local strengthLabel = tabStats:AddLabel("Strength: 0 (0)")
local killsGainLabel = tabStats:AddLabel("Kills Gain: 0 (0)")

tabStats:AddLabel("------------------")

local lblTotalDur = tabStats:AddLabel("TOTAL DURABILITY: 0")
local lblWithPets = tabStats:AddLabel("With Pets: 0")

lblTotalDur.TextColor3 = Color3.fromRGB(255, 255, 255)
lblWithPets.TextColor3 = Color3.fromRGB(255, 255, 255)

local function setSpectate(plr)
    if currentConnection then
        currentConnection:Disconnect()
        currentConnection = nil
    end

    local function updateCamera()
        if spectating and plr and plr.Parent then
            local humanoid = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                workspace.CurrentCamera.CameraSubject = humanoid
            end
        end
    end

    currentConnection = plr.CharacterAdded:Connect(function(char)
        local hum = char:WaitForChild("Humanoid")
        workspace.CurrentCamera.CameraSubject = hum
    end)

    if spectateLoop then
        spectateLoop:Disconnect()
    end
    spectateLoop = game:GetService("RunService").Heartbeat:Connect(updateCamera)

    updateCamera()
end

tabStats:AddSwitch("View Player", function(val)
    local lp = game.Players.LocalPlayer
    if val then
        spectating = true
        if selectedPlayer then
            local plr = game.Players:FindFirstChild(selectedPlayer.Name)
            if plr then
                setSpectate(plr)
            end
        end
    else
        spectating = false
        if currentConnection then
            currentConnection:Disconnect()
            currentConnection = nil
        end
        if spectateLoop then
            spectateLoop:Disconnect()
            spectateLoop = nil
        end
        if lp.Character and lp.Character:FindFirstChildOfClass("Humanoid") then
            workspace.CurrentCamera.CameraSubject = lp.Character:FindFirstChildOfClass("Humanoid")
        end
    end
end)

local function updatePlayerStats()
    local player = game.Players.LocalPlayer
    if player then
        local leaderstats = player:FindFirstChild("leaderstats")
        if leaderstats and leaderstats:FindFirstChild("Kills") then
            local currentKills = leaderstats.Kills.Value
            local killsGain = currentKills - initialKills
            killsGainLabel.Text = "Kills Gain: " .. formatBoth(killsGain)
        else
            killsGainLabel.Text = "Kills Gain: 0 (0)"
        end
    end

    if selectedPlayer and selectedPlayer.Parent then
        local durability = selectedPlayer:FindFirstChild("Durability")
        if durability then
            durabilityLabel.Text = "Durability: " .. formatBoth(durability.Value)
            
            local baseDur = durability.Value
            local ultimateBoost = baseDur * (ULTIMATE_BOOST_PERCENT / 100)
            local petsEquipped = PETS_MAX -- Assumindo máximo de pets por padrão
            local petBoost = baseDur * ((PETS_BOOST_PER_PACK * petsEquipped) / 100)
            local totalDur = baseDur + ultimateBoost
            local withPets = totalDur + petBoost

            lblTotalDur.Text = "TOTAL DURABILITY: " .. formatAbbreviated(totalDur)
            lblWithPets.Text = string.format("With Pets (%d): %s", petsEquipped, formatAbbreviated(withPets))
        else
            durabilityLabel.Text = "Durability: 0 (0)"
            lblTotalDur.Text = "TOTAL DURABILITY: -"
            lblWithPets.Text = "With Pets: -"
        end
        
        local leaderstats = selectedPlayer:FindFirstChild("leaderstats")
        if leaderstats then
            local strength = leaderstats:FindFirstChild("Strength")
            if strength then
                strengthLabel.Text = "Strength: " .. formatBoth(strength.Value)
            else
                strengthLabel.Text = "Strength: 0 (0)"
            end
        else
            strengthLabel.Text = "Strength: 0 (0)"
        end
    else
        durabilityLabel.Text = "Durability: 0 (0)"
        strengthLabel.Text = "Strength: 0 (0)"
        lblTotalDur.Text = "TOTAL DURABILITY: -"
        lblWithPets.Text = "With Pets: -"
    end
end

task.spawn(function()
    while task.wait(1) do
        updatePlayerStats()
    end
end)

updatePlayerStats()
